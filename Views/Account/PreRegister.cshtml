@model Job_Portal_Project.ViewModels.RegisterViewModel
@{
    ViewData["Title"] = "PreRegister";
}

<section id="content" class="section-padding">
    <div class="container">
        <div class="row justify-content-center align-items-center min-vh-70" style="margin-top: -50px;">
            <div class="col-md-10">
                <form method="post" id="roleForm">
                    <div id="alertContainer"></div>

                    <div class="text-center">
                        <h2 class="display-rebrand">Join as an Employer or Job Seeker</h2>

                        <div class="role-container">
                            <div class="choice-wrapper">
                                <div class="choice" data-role="Employer">
                                    <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" viewBox="0 0 24 24">
                                        <path fill="none" stroke="#001e00" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19.28 21h-6.9a1.6 1.6 0 01-1.73-1.5v-4a1.6 1.6 0 011.73-1.5h6.9A1.59 1.59 0 0121 15.5v4a1.66 1.66 0 01-1.72 1.5z"></path>
                                        <path fill="none" stroke="#001e00" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16.9 12h-2.15a.65.65 0 00-.72.66V14h3.59v-1.34a.65.65 0 00-.72-.66z"></path>
                                        <line x1="10.65" x2="21" y1="17.29" y2="17.29" stroke="#001e00" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></line>
                                        <circle cx="10.04" cy="5.73" r="2.73" fill="none" stroke="#001e00" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></circle>
                                        <path fill="none" stroke="#001e00" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 18.45v-.9a7 7 0 017-7h.09a6.73 6.73 0 011.91.27"></path>
                                    </svg>
                                    <input class="radio" id="employerRadio" type="radio" name="Role" value="Employer" />
                                    <h4>I'm hiring</h4>
                                </div>

                                <div class="choice" data-role="JobSeeker">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" aria-hidden="true" viewBox="0 0 24 24">
                                        <path stroke="#001e00" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9.43 21H5.99M3 18.45v-.9a7 7 0 017-7h.09a6.94 6.94 0 013.79 1.12m5.5 9.33h-11L10 14h11l-1.62 7zm-4.69-3a.5.5 0 100-1 .5.5 0 000 1zM12.77 5.73a2.73 2.73 0 11-5.46 0 2.73 2.73 0 015.46 0z"></path>
                                    </svg>
                                    <input class="radio" id="jobSeekerRadio" type="radio" name="Role" value="JobSeeker" />
                                    <h4>I'm looking for a job</h4>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="text-center">
                        <input type="hidden" name="Role" id="roleInput">
                        <button type="submit" class="btn btn-register disabled" id="registerButton">
                            Register as a Job seeker
                        </button>
                    </div>
                </form>

                <p class="text-center mt-4 mb-5">
                    Already have an account?
                    <a href="/Account/Login" class="login-link">Login</a>
                </p>
            </div>
        </div>
    </div>
</section>

<style>
    :root {
        --primary-color: #00BCD4;
        --primary-dark: #0097A7;
        --accent-color: #009688;
        --text-dark: #333333;
        --light-bg: #f8f9fa;
        --border-radius: 12px;
        --box-shadow: 0 6px 16px rgba(0, 188, 212, 0.15);
        --transition: all 0.3s ease-in-out;
    }

    body {
        font-family: 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif;
        color: var(--text-dark);
        background-color: #e6f7fa;
        background-image: linear-gradient(135deg, #e6f7fa 0%, #b2ebf2 100%);
        animation: fadeInBackground 1.5s ease-in-out;
    }

    @@keyframes fadeInBackground {
        from

    {
        opacity: 0;
    }

    to {
        opacity: 1;
    }

    }

    .section-padding {
        padding: 80px 0;
    }

    .display-rebrand {
        font-weight: 700;
        color: #31a7bf;
        font-size: 2.5rem;
        position: relative;
        animation: slideInTitle 0.8s ease-out;
    }

    @@keyframes slideInTitle {
        from

    {
        transform: translateY(-20px);
        opacity: 0;
    }

    to {
        transform: translateY(0);
        opacity: 1;
    }

    }

    .display-rebrand:after {
        content: '';
        position: absolute;
        bottom: -15px;
        left: 50%;
        transform: translateX(-50%);
        width: 100px;
        height: 4px;
        background-color: var(--primary-color);
        border-radius: 2px;
        animation: expandUnderline 0.5s ease-out;
    }

    @@keyframes expandUnderline {
        from

    {
        width: 0;
    }

    to {
        width: 100px;
    }

    }

    .role-container {
        max-width: 750px;
        margin: 3rem auto; 

    }

    .choice-wrapper {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 2.5rem;
        margin: 3rem 0;
        animation: fadeInChoices 1s ease-out;
    }

    @@keyframes fadeInChoices {
        from

    {
        opacity: 0;
        transform: scale(0.95);
    }

    to {
        opacity: 1;
        transform: scale(1);
    }

    }

    .choice {
        width: 300px;
        height: 200px;
        border: 2px solid #e0e0e0;
        border-radius: var(--border-radius);
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: var(--transition);
        position: relative;
        overflow: hidden;
        background-color: #ffffff;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

        .choice:hover {
            border-color: var(--primary-color);
            transform: translateY(-8px) scale(1.02);
            box-shadow: var(--box-shadow);
            background-color: rgba(0, 188, 212, 0.05);
        }

        .choice.selected {
            border-color: var(--primary-color);
            background-color: rgba(0, 188, 212, 0.1);
            transform: translateY(-8px) scale(1.02);
            box-shadow: var(--box-shadow);
        }

            .choice.selected:before {
                content: '✓';
                position: absolute;
                top: 12px;
                right: 12px;
                width: 28px;
                height: 28px;
                background-color: var(--primary-color);
                color: white;
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                font-weight: bold;
                font-size: 16px;
                animation: popInCheck 0.3s ease-out;
            }

    @@keyframes popInCheck {
        from

    {
        transform: scale(0);
        opacity: 0;
    }

    to {
        transform: scale(1);
        opacity: 1;
    }

    }

    .choice svg {
        height: 55px;
        width: 55px;
        margin-bottom: 1.2rem;
        transition: var(--transition);
    }

    .choice:hover svg path,
    .choice:hover svg circle,
    .choice:hover svg line,
    .choice.selected svg path,
    .choice.selected svg circle,
    .choice.selected svg line {
        stroke: var(--primary-color);
        animation: strokeChange 0.3s ease;
    }

    @@keyframes strokeChange {
        from

    {
        stroke: #001e00;
    }

    to {
        stroke: var(--primary-color);
    }

    }

    .choice h4 {
        font-weight: 600;
        font-size: 1.3rem;
        margin-top: 1rem;
        color: var(--text-dark);
        transition: var(--transition);
    }

    .choice:hover h4,
    .choice.selected h4 {
        color: var(--primary-color);
    }

    .choice input[type="radio"] {
        position: absolute;
        opacity: 0;
        width: 0;
        height: 0;
    }

    .btn-register {
        background-color: var(--primary-color);
        color: white;
        padding: 0.9rem 3rem;
        font-size: 1.15rem;
        border-radius: 50px;
        border: none;
        box-shadow: 0 4px 12px rgba(0, 188, 212, 0.3);
        transition: var(--transition);
        font-weight: 600;
        margin-top: 2rem;
        animation: pulseButton 2s infinite;
    }

    @@keyframes pulseButton {
        0%

    {
        box-shadow: 0 4px 12px rgba(0, 188, 212, 0.3);
    }

    50% {
        box-shadow: 0 4px 20px rgba(0, 188, 212, 0.5);
    }

    100% {
        box-shadow: 0 4px 12px rgba(0, 188, 212, 0.3);
    }

    }

    .btn-register:hover,
    .btn-register:focus {
        background-color: var(--primary-dark);
        box-shadow: 0 8px 16px rgba(0, 151, 167, 0.5);
        transform: translateY(-3px);
    }

    .btn-register.disabled {
        background-color: #e0e0e0 !important;
        color: #999 !important;
        cursor: not-allowed;
        pointer-events: none;
        box-shadow: none;
        animation: none;
    }

    .login-link {
        color: var(--primary-color);
        font-weight: 600;
        text-decoration: none;
        transition: var(--transition);
        position: relative;
    }

        .login-link:hover {
            color: var(--primary-dark);
            text-decoration: none;
        }

        .login-link:after {
            content: '';
            position: absolute;
            width: 0;
            height: 2px;
            bottom: -2px;
            left: 0;
            background-color: var(--primary-dark);
            transition: width 0.3s ease;
        }

        .login-link:hover:after {
            width: 100%;
        }

    .alert {
        border-radius: var(--border-radius);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        animation: slideInAlert 0.5s ease-out;
    }

    @@keyframes slideInAlert {
        from

    {
        transform: translateY(-10px);
        opacity: 0;
    }

    to {
        transform: translateY(0);
        opacity: 1;
    }

    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Check if we have an email from TempData and show alert if needed
        const urlParams = new URLSearchParams(window.location.search);
        const emailParam = urlParams.get('email');

        if (emailParam) {
            const alertContainer = document.getElementById('alertContainer');
            alertContainer.innerHTML = `
                <div class="alert alert-warning alert-dismissible fade show mx-auto" role="alert" style="max-width: 450px;">
                    <strong>Warning:</strong> Your Google account is not linked to any account yet. Please complete registration.
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
                <input type="hidden" id="emailInput" name="Email" value="${emailParam}" />
            `;
        }

        const choices = document.querySelectorAll('.choice');
        const registerButton = document.getElementById('registerButton');
        const roleInput = document.getElementById('roleInput');

        choices.forEach(function(choice) {
            choice.addEventListener('click', function() {
                // Remove selected class from all choices
                choices.forEach(item => item.classList.remove('selected'));

                // Add selected class to clicked choice
                this.classList.add('selected');

                // Check the radio input
                const radio = this.querySelector('input[type="radio"]');
                radio.checked = true;

                // Update hidden input and button text
                const role = this.dataset.role;
                roleInput.value = role;

                registerButton.textContent = role === 'JobSeeker'
                    ? 'Register as a job seeker'
                    : 'Register as an employer';

                // Enable the button
                registerButton.classList.remove('disabled');
                registerButton.classList.add('active');
            });
        });
    });
</script>